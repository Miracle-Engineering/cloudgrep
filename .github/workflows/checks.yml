name: checks

on:
  push:
    branches:
      - main
  pull_request:

env:
  GO_VERSION: 1.18
  CGO_ENABLED: 0

  AWS_REGION: us-east-1

permissions:
  contents: write
  id-token: write

jobs:
  go-test:
    name: go test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Select AWS account
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('.github/scripts/go-test-aws-account.js')
            await script({ context, core, exec, require })
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: "${{ env.AWS_REGION }}"
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-actions-tests
      - run: go mod download
      - run: make test
        env:
          CGO_ENABLED: 1
      - name: Check zz_integration_stats.json is up to date
        # zz_integration_stats.json needs to be committed if it has changed
        run: git diff --exit-code
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.out
          token: ${{ secrets.CLOUDGREP_CODECOV_TOKEN }}
          fail_ci_if_error: true

  go-fmt:
    name: go fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod download
      - run: script/check_formatting.sh

  go-mod-tidy:
    name: go mod tidy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod download
      - run: go mod tidy -go=${{ env.GO_VERSION }}
      - name: "Check go.mod and go.sum changed"
        run: |
          git diff --quiet go.mod
          go_mod_changed=$?
          git diff --quiet go.sum
          go_sum_changed=$?
          if [[ $go_mod_changed -gt 0 || $go_sum_changed -gt 0 ]]; then exit 1; fi

  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.46.2

  terraform-fmt:
    name: terraform fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7
      - run: terraform fmt -diff -check -recursive integration/aws/terraform

  awsgen:
    name: awsgen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod download
      - run: make awsgen
      - run: git diff --exit-code

  markdowngen:
    name: markdowngen
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        fetch-depth: 0
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          markdown:
            - '**.md.tmpl'
            - 'pkg/provider/aws/zz_integration_stats.json'
            - 'pkg/config/config.yaml'
    - uses: actions/setup-go@v2
      if: steps.changes.outputs.markdown == 'true'
      with:
        go-version: ${{ env.GO_VERSION }}
    - run: go mod download
      if: steps.changes.outputs.markdown == 'true'
    - run: make markdown
      if: steps.changes.outputs.markdown == 'true'
    - name: Commit the markdown files
      if: steps.changes.outputs.markdown == 'true'
      # this will commit the markdown changes in the current branch 
      run: |
        git config --global user.name 'Cloudgrep'
        git config --global user.email 'cloudgrep@users.noreply.github.com'
        git add **.md
        if ! git diff-index --quiet HEAD; then
          git commit -am "Update markdown files"
          git push
        fi
