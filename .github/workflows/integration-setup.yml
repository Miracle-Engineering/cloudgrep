name: Integration Test Setup

env:
  AWS_REGION: us-east-1

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run terraform in"
        type: choice
        options:
          - dev
          - prod

  push:
    branches:
      - main
    paths:
      - "integration/aws/terraform/**"
      - ".github/scripts/integration-setup.yml"
      - ".github/scripts/integration-setup-aws-account.js"

  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths:
      - "integration/aws/terraform/**"
      - ".github/workflows/integration-setup.yml"

concurrency: terraform-integration

permissions:
  contents: read
  id-token: write

jobs:
  terraform-apply:
    name: terraform apply
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Select AWS account
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('.github/scripts/integration-setup-aws-account.js')
            await script({ context, core, require })
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: "${{ env.AWS_REGION }}"
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-actions-terraform

      - run: terraform init -no-color
        working-directory: ${{ env.TF_DIR }}

      - run: terraform validate -no-color
        working-directory: ${{ env.TF_DIR }}

      - run: terraform plan -no-color -out "${{ runner.temp }}/tfplan"
        working-directory: ${{ env.TF_DIR }}

      - run: terraform apply -no-color "${{ runner.temp }}/tfplan"
        working-directory: ${{ env.TF_DIR }}
