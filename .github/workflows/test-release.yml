name: Test-Release

on:
  push:

jobs:
  bumpr:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.bumpr.outputs.skip }}
      next_version: ${{ steps.bumpr.outputs.next_version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Bump version on merging Pull Requests with specific labels.
    # (bump:major,bump:minor,bump:patch)
    - name: Bump version on merging PR
      id: bumpr
      uses: haya14busa/action-bumpr@v1

  build-macos:
    name: Build macOS Binaries
    needs: [bumpr]
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get tag name
      id: tag
      uses: haya14busa/action-cond@v1
      with:
        cond: "${{ startsWith(github.ref, 'refs/tags/') }}"
        if_true: ${{ github.ref }}
        if_false: ${{ needs.bumpr.outputs.next_version }}

    - name: Set up Go
      run: |
        sudo curl -LO https://go.dev/dl/go1.18.darwin-amd64.tar.gz
        sudo rm -rf /usr/local/go
        sudo tar -C /usr/local -xzf go1.18.darwin-amd64.tar.gz
        sudo mv /usr/local/go/bin/go /usr/local/bin/go
        sudo mv /usr/local/go/bin/gofmt /usr/local/bin/gofmt

    - name: Build Mac OS
      id: build
      run: |
        make release-darwin

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: cloudgrep_darwin
        path: ./bin/*.zip
  
  build-linux-windows:
    name: Build Linux and Windows Binaries
    needs: [bumpr]
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
  
    - name: Get tag name
      id: tag
      uses: haya14busa/action-cond@v1
      with:
        cond: "${{ startsWith(github.ref, 'refs/tags/') }}"
        if_true: ${{ github.ref }}
        if_false: ${{ needs.bumpr.outputs.next_version }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Install GCC and SQLite for Arm64
      uses: ryankurte/action-apt@v0.3.0
      with:
        arch: arm64
        packages: "gcc-10-aarch64-linux-gnu gcc-aarch64-linux-gnu libsqlite3-dev:arm64"

    - name: Build Release Artifacts Windows and Linux
      id: build
      run: |
        make setup
        VERSION=${{ steps.tag.outputs.value }} make release

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: cloudgrep_lin_win
        path: ./bin/*.zip

  release:
    name: Create release
    needs: [build-macos,build-linux-windows]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.url }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get tag name
      id: tag
      uses: haya14busa/action-cond@v1
      with:
        cond: "${{ startsWith(github.ref, 'refs/tags/') }}"
        if_true: ${{ github.ref }}
        if_false: ${{ needs.bumpr.outputs.next_version }}
        
    # retrieve the darwin binaries built in the linux/windows job
    - uses: actions/download-artifact@v2
      with:
        name: cloudgrep_lin_win
    - run: |
          tar xvf cloudgrep_lin_win.zip
          cp *.zip ./bin/

    # retrieve the darwin binaries built in the mac-os job
    - uses: actions/download-artifact@v2
      with:
        name: cloudgrep_darwin
    - run: |
          tar xvf cloudgrep_darwin.zip
          cp *.zip ./bin/

    - run: |
          ls -lh ./bin/
