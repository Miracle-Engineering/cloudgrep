name: Test-Release

on:
  push:

jobs:
  build-macos:
    runs-on: macos-latest
    # runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # - name: Set up Go
    #   if: "!steps.bumpr.outputs.skip"
    #   uses: actions/setup-go@v2
    #   with:
    #     go-version: 1.18

    - name: Set up Go
      run: |
        sudo curl -LO https://go.dev/dl/go1.18.darwin-amd64.tar.gz
        sudo rm -rf /usr/local/go
        sudo tar -C /usr/local -xzf go1.18.darwin-amd64.tar.gz
        sudo mv /usr/local/go/bin/go /usr/local/bin/go
        sudo mv /usr/local/go/bin/gofmt /usr/local/bin/gofmt

    # - name: Install GCC and SQLite for Arm64
    #   uses: ryankurte/action-apt@v0.3.0
    #   with:
    #     arch: arm64
    #     packages: "gcc-10-aarch64-linux-gnu gcc-aarch64-linux-gnu libsqlite3-dev:arm64"

    - name: Build Release Artifacts
      if: "!steps.bumpr.outputs.skip"
      id: build
      run: |
        # CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 GOARM=7 go build -o "./bin/cloudgrep_darwin_arm64"
        CGO_LDFLAGS="-L/usr/lib" CGO_ENABLED=1 GOARCH=amd64 GOOS=darwin go build -ldflags "-s -w -linkmode=external"  -o "./bin/cloudgrep_darwin_arm64"

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: cloudgrep_darwin_arm64
        path: ./bin/cloudgrep_darwin_arm64

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/download-artifact@v2
      with:
        name: cloudgrep_darwin_arm64
    - run: ls -lh .
    