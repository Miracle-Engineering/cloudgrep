{{- define "output" }}
{{- if .IsLast }}
if err := resourceconverter.SendAllConverted(ctx, output, resourceConverter, {{ .IterVar }}.{{ .Current }}); err != nil {
	return err
}
{{- else }}
for _, {{ .NextIterVar }} := range {{ .IterVar }}.{{ .Current }} {
	{{- tabindent 1 (include "output" .Next) }}
}
{{- end }}
{{- end }}

func (p *{{.ProviderName}}) {{.FuncName}}(ctx context.Context, output chan<- model.Resource) error {
	client := {{.ServicePkg}}.NewFromConfig(p.config)

	input := &{{.ServicePkg}}.{{.Action}}Input{}

	resourceConverter := p.converterFor({{ .ResourceName | quote }})

	results, err := {{.Service}}.{{.Action}}(ctx, input)
	if err != nil {
		return nil, fmt.Errorf("failed to fetch {{.Description}}: %w", err)
	}

	{{- include "output" (.OutputKey.WithRoot "results") | tabindent 1 }}

	return nil
}
